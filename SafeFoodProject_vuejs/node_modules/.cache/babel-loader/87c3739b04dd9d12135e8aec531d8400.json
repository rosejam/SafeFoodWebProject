{"remainingRequest":"/Users/dj_kim/git/SafeFoodWebProject/SafeFoodProject_vuejs/node_modules/babel-loader/lib/index.js!/Users/dj_kim/git/SafeFoodWebProject/SafeFoodProject_vuejs/node_modules/eslint-loader/index.js??ref--13-0!/Users/dj_kim/git/SafeFoodWebProject/SafeFoodProject_vuejs/src/store.js","dependencies":[{"path":"/Users/dj_kim/git/SafeFoodWebProject/SafeFoodProject_vuejs/src/store.js","mtime":1584276778387},{"path":"/Users/dj_kim/git/SafeFoodWebProject/SafeFoodProject_vuejs/node_modules/cache-loader/dist/cjs.js","mtime":1583984999906},{"path":"/Users/dj_kim/git/SafeFoodWebProject/SafeFoodProject_vuejs/node_modules/babel-loader/lib/index.js","mtime":1583984999909},{"path":"/Users/dj_kim/git/SafeFoodWebProject/SafeFoodProject_vuejs/node_modules/eslint-loader/index.js","mtime":1583985002877}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9kZWZpbmVQcm9wZXJ0eSBmcm9tICIvVXNlcnMvZGpfa2ltL2dpdC9TYWZlRm9vZFdlYlByb2plY3QvU2FmZUZvb2RQcm9qZWN0X3Z1ZWpzL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9kZWZpbmVQcm9wZXJ0eSI7Cgp2YXIgX2FjdGlvbnMsIF9tdXRhdGlvbnM7CgppbXBvcnQgVnVlIGZyb20gJ3Z1ZSc7CmltcG9ydCBWdWV4IGZyb20gJ3Z1ZXgnOwppbXBvcnQgQ29uc3RhbnQgZnJvbSAnLi9Db25zdGFudCc7CmltcG9ydCBheGlvcyBmcm9tICcuL2F4aW9zLWNvbW1vbic7ClZ1ZS51c2UoVnVleCk7CnZhciBzdG9yZSA9IG5ldyBWdWV4LlN0b3JlKHsKICAvL3N0YXRlCiAgc3RhdGU6IHsKICAgIHFuYWxpc3Q6IFtdLAogICAgcW5hOiB7fQogIH0sCiAgYWN0aW9uczogKF9hY3Rpb25zID0ge30sIF9kZWZpbmVQcm9wZXJ0eShfYWN0aW9ucywgQ29uc3RhbnQuR0VUX1FOQUxJU1QsIGZ1bmN0aW9uIChzdG9yZSkgewogICAgYXhpb3MuZ2V0KCIvbGlzdCIpLnRoZW4oZnVuY3Rpb24gKHJlc3BvbnNlKSB7CiAgICAgIHN0b3JlLmNvbW1pdChDb25zdGFudC5HRVRfUU5BTElTVCwgewogICAgICAgIHFuYWxpc3Q6IHJlc3BvbnNlLmRhdGEKICAgICAgfSk7CiAgICB9KS5jYXRjaChmdW5jdGlvbiAoZXhwKSB7CiAgICAgIHJldHVybiBhbGVydCgiZ2V0UW5hTGlzdOyymOumrOyXkCDsi6TtjKjtlZjsmIDsirXri4jri6QuICIgKyBleHApOwogICAgfSk7CiAgfSksIF9kZWZpbmVQcm9wZXJ0eShfYWN0aW9ucywgQ29uc3RhbnQuR0VUX1FOQSwgZnVuY3Rpb24gKHN0b3JlLCBwYXlsb2FkKSB7CiAgICBheGlvcy5nZXQoIi9saXN0L2lkLyIgKyBwYXlsb2FkKS50aGVuKGZ1bmN0aW9uIChyZXNwb25zZSkgewogICAgICBzdG9yZS5jb21taXQoQ29uc3RhbnQuR0VUX1FOQSwgewogICAgICAgIHFuYTogcmVzcG9uc2UuZGF0YQogICAgICB9KTsKICAgIH0pLmNhdGNoKGZ1bmN0aW9uIChleHApIHsKICAgICAgcmV0dXJuIGFsZXJ0KCJnZXRRbmHsspjrpqzsl5Ag7Iuk7Yyo7ZWY7JiA7Iq164uI64ukLiAiICsgZXhwKTsKICAgIH0pOwogIH0pLCBfZGVmaW5lUHJvcGVydHkoX2FjdGlvbnMsIENvbnN0YW50LkFERF9RLCBmdW5jdGlvbiAoc3RvcmUsIHBheWxvYWQpIHsKICAgIGF4aW9zLnBvc3QoIi9hZGQvcXVlc3Rpb24iLCBwYXlsb2FkLnFuYSkgLy90aGlzLnFuYeuhnCDrhKPsl4jrjZggcW5h6rCd7LK0CiAgICAudGhlbihmdW5jdGlvbiAoKSB7CiAgICAgIHN0b3JlLmRpc3BhdGNoKENvbnN0YW50LkdFVF9RTkFMSVNUKTsgLy/snITsmYAg65GQ7KSEIOyInOyEnOuKlCDsg4HqtIDsl4bripTrk68KICAgICAgLy9jb25zb2xlLmxvZyhyZXNwb25zZS5kYXRhKTsKICAgIH0pLmNhdGNoKGZ1bmN0aW9uIChleHApIHsKICAgICAgcmV0dXJuIGFsZXJ0KCLsgr3snoUg7LKY66as7JeQIOyLpO2MqO2VmOyYgOyKteuLiOuLpC4gIiArIGV4cCk7CiAgICB9KTsKICB9KSwgX2RlZmluZVByb3BlcnR5KF9hY3Rpb25zLCBDb25zdGFudC5BRERfQSwgZnVuY3Rpb24gKHN0b3JlLCBwYXlsb2FkKSB7CiAgICBheGlvcy5wdXQoIi9hZGQvYW5zd2VyIiwgcGF5bG9hZC5xbmEpIC8vdGhpcy5xbmHroZwg64Sj7JeI642YIHFuYeqwneyytAogICAgLnRoZW4oZnVuY3Rpb24gKCkgewogICAgICBzdG9yZS5kaXNwYXRjaChDb25zdGFudC5HRVRfUU5BTElTVCk7IC8v7JyE7JmAIOuRkOykhCDsiJzshJzripQg7IOB6rSA7JeG64qU65OvCiAgICAgIC8vY29uc29sZS5sb2cocmVzcG9uc2UuZGF0YSk7CiAgICB9KS5jYXRjaChmdW5jdGlvbiAoZXhwKSB7CiAgICAgIHJldHVybiBhbGVydCgi7IK97J6FIOyymOumrOyXkCDsi6TtjKjtlZjsmIDsirXri4jri6QuICIgKyBleHApOwogICAgfSk7CiAgfSksIF9kZWZpbmVQcm9wZXJ0eShfYWN0aW9ucywgQ29uc3RhbnQuUkVNT1ZFX1FOQSwgZnVuY3Rpb24gKHN0b3JlLCBwYXlsb2FkKSB7CiAgICBheGlvcy5kZWxldGUoIi9xdWVzdGlvbi9kZWxldGUvIiArIHBheWxvYWQpLnRoZW4oZnVuY3Rpb24gKCkgewogICAgICBzdG9yZS5kaXNwYXRjaChDb25zdGFudC5HRVRfUU5BTElTVCk7CiAgICB9KS5jYXRjaChmdW5jdGlvbiAoZXhwKSB7CiAgICAgIHJldHVybiBhbGVydCgi7IKt7KCcIOyymOumrOyXkCDsi6TtjKjtlZjsmIDsirXri4jri6QuICIgKyBleHApOwogICAgfSk7CiAgfSksIF9kZWZpbmVQcm9wZXJ0eShfYWN0aW9ucywgQ29uc3RhbnQuVVBEQVRFX1FOQSwgZnVuY3Rpb24gKHN0b3JlLCBwYXlsb2FkKSB7CiAgICBheGlvcy5wdXQoIi9xdWVzdGlvbi91cGRhdGUiLCBwYXlsb2FkLnFuYSkudGhlbihmdW5jdGlvbiAoKSB7CiAgICAgIHN0b3JlLmRpc3BhdGNoKENvbnN0YW50LkdFVF9RTkFMSVNUKTsKICAgIH0pLmNhdGNoKGZ1bmN0aW9uIChleHApIHsKICAgICAgcmV0dXJuIGFsZXJ0KCLsl4XrjoMg7LKY66as7JeQIOyLpO2MqO2VmOyYgOyKteuLiOuLpC4gIiArIGV4cCk7CiAgICB9KTsKICB9KSwgX2FjdGlvbnMpLAogIG11dGF0aW9uczogKF9tdXRhdGlvbnMgPSB7fSwgX2RlZmluZVByb3BlcnR5KF9tdXRhdGlvbnMsIENvbnN0YW50LkdFVF9RTkFMSVNULCBmdW5jdGlvbiAoc3RhdGUsIHBheWxvYWQpIHsKICAgIHN0YXRlLnFuYWxpc3QgPSBwYXlsb2FkLnFuYWxpc3Q7CiAgfSksIF9kZWZpbmVQcm9wZXJ0eShfbXV0YXRpb25zLCBDb25zdGFudC5HRVRfUU5BLCBmdW5jdGlvbiAoc3RhdGUsIHBheWxvYWQpIHsKICAgIHN0YXRlLnFuYSA9IHBheWxvYWQucW5hOwogIH0pLCBfbXV0YXRpb25zKQp9KTsKZXhwb3J0IGRlZmF1bHQgc3RvcmU7"},{"version":3,"sources":["/Users/dj_kim/git/SafeFoodWebProject/SafeFoodProject_vuejs/src/store.js"],"names":["Vue","Vuex","Constant","axios","use","store","Store","state","qnalist","qna","actions","GET_QNALIST","get","then","response","commit","data","catch","exp","alert","GET_QNA","payload","ADD_Q","post","dispatch","ADD_A","put","REMOVE_QNA","delete","UPDATE_QNA","mutations"],"mappings":"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","sourcesContent":["import Vue from 'vue';\r\nimport Vuex from 'vuex';\r\nimport Constant from './Constant';\r\nimport axios from './axios-common';\r\n\r\nVue.use(Vuex);\r\n\r\nconst store = new Vuex.Store({\r\n    \r\n    //state\r\n    state: {\r\n        qnalist: [],\r\n        qna: {}\r\n    },\r\n\r\n    actions: { // 외부와의 통신을 통해 데이터 처리 dispath에 의해 호출됨.    \r\n        [Constant.GET_QNALIST]: (store) =>{\r\n            axios\r\n            .get(\"/list\")\r\n            .then(response => {\r\n                store.commit(Constant.GET_QNALIST, {qnalist: response.data});\r\n            })\r\n            .catch(exp => alert(\"getQnaList처리에 실패하였습니다. \" + exp));  \r\n        }\r\n        ,\r\n        [Constant.GET_QNA]: (store, payload) => {\r\n            axios\r\n            .get(\"/list/id/\" + payload)\r\n            .then(response => {\r\n                store.commit(Constant.GET_QNA, {qna: response.data});\r\n            })\r\n            .catch(exp => alert(\"getQna처리에 실패하였습니다. \" + exp));\r\n        },\r\n        [Constant.ADD_Q]: (store, payload) => {\r\n            axios\r\n            .post(\"/add/question\", payload.qna) //this.qna로 넣었던 qna객체\r\n            .then(() => {\r\n                store.dispatch(Constant.GET_QNALIST); //위와 두줄 순서는 상관없는듯\r\n                //console.log(response.data);\r\n            })\r\n            .catch(exp => alert(\"삽입 처리에 실패하였습니다. \" + exp));\r\n        },\r\n        [Constant.ADD_A]: (store, payload) => {\r\n            axios\r\n            .put(\"/add/answer\", payload.qna) //this.qna로 넣었던 qna객체\r\n            .then(() => {\r\n                store.dispatch(Constant.GET_QNALIST); //위와 두줄 순서는 상관없는듯\r\n                //console.log(response.data);\r\n            })\r\n            .catch(exp => alert(\"삽입 처리에 실패하였습니다. \" + exp));\r\n        },\r\n        [Constant.REMOVE_QNA]: (store, payload) => {\r\n            axios\r\n            .delete(\"/question/delete/\" + payload)\r\n            .then(() => {\r\n                store.dispatch(Constant.GET_QNALIST);\r\n            })\r\n            .catch(exp => alert(\"삭제 처리에 실패하였습니다. \" + exp));\r\n        },\r\n        [Constant.UPDATE_QNA]: (store, payload) => {\r\n            axios\r\n            .put(\"/question/update\", payload.qna)\r\n            .then(() => {\r\n                store.dispatch(Constant.GET_QNALIST);\r\n            })\r\n            .catch(exp => alert(\"업뎃 처리에 실패하였습니다. \" + exp));\r\n        }\r\n    },\r\n\r\n    mutations: { // 저장소에 데이터 실제 반영(commit시 호출됨)\r\n        [Constant.GET_QNALIST]: (state, payload) => {\r\n            state.qnalist = payload.qnalist;\r\n        },\r\n        [Constant.GET_QNA]: (state, payload) => {            \r\n            state.qna = payload.qna;\r\n        }\r\n    }\r\n});\r\n\r\n\r\nexport default store;"]}]}